<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd">
    <!--
    Configuration for the servlet
        DispatcherServlet is told by web.xml to handle all address that
            end with .html
        It does this using files in org.WASPs.controller, and the annotation
            @RequestMapping on those controllers assigns them particular .html addresses
    -->

    <!-- This is how the program knows we will be using @ annotations -->
    <mvc:annotation-driven/>
    <!-- This tells the program to look for @Controller objects here and map them -->
    <context:component-scan base-package="org.WASPs.controller"/>
    <!-- Serve up static files here and in web.xml
            Example:
    <mvc:resources mapping="pdfs" location="/pdfs/**" />
    -->

    <!-- This is where to look for views, aka .jsp files -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp" />

</beans>
